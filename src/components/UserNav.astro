---
// Component for user navigation/profile panel
---

<div id="user-nav" class="hidden">
  <div class="flex items-center justify-between w-full">
    <!-- User info -->
    <div class="flex items-center gap-3">
      <div class="w-8 h-8 bg-indigo-500 rounded-full flex items-center justify-center text-white text-sm font-semibold">
        <span id="user-avatar">U</span>
      </div>
      <div>
        <p id="user-email" class="text-sm text-gray-700 font-medium">user@example.com</p>
        <p class="text-xs text-gray-500">Zalogowany</p>
      </div>
    </div>

    <!-- User actions -->
    <div class="flex items-center gap-2">
      <button
        id="logout-btn"
        type="button"
        class="px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors"
      >
        Wyloguj
      </button>
    </div>
  </div>
</div>

<!-- Guest navigation (for non-logged users) -->
<div id="guest-nav" class="flex items-center gap-4">
  <a href="/login" class="px-4 py-2 text-sm text-indigo-600 hover:text-indigo-700 font-medium"> Logowanie </a>
  <a
    href="/register"
    class="px-4 py-2 text-sm bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors"
  >
    Rejestracja
  </a>
</div>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    const userNav = document.getElementById("user-nav");
    const guestNav = document.getElementById("guest-nav");
    const userEmail = document.getElementById("user-email");
    const userAvatar = document.getElementById("user-avatar");
    const logoutBtn = document.getElementById("logout-btn");

    // Check if user is logged in
    const token = localStorage.getItem("access_token");

    if (token) {
      try {
        // Get current user profile
        const response = await fetch("/api/auth/me", {
          method: "GET",
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
          },
        });

        if (response.ok) {
          const result = await response.json();
          const user = result.data;

          // Show user navigation
          if (userNav && guestNav && userEmail && userAvatar) {
            userNav.classList.remove("hidden");
            guestNav.classList.add("hidden");

            userEmail.textContent = user.email;
            userAvatar.textContent = user.email.charAt(0).toUpperCase();
          }
        } else {
          // Token is invalid, remove it and show guest nav
          localStorage.removeItem("access_token");
          localStorage.removeItem("refresh_token");
          showGuestNav();
        }
      } catch {
        // console.warn("Auth check failed:", error);
        localStorage.removeItem("access_token");
        localStorage.removeItem("refresh_token");
        showGuestNav();
      }
    } else {
      showGuestNav();
    }

    function showGuestNav() {
      if (userNav && guestNav) {
        userNav.classList.add("hidden");
        guestNav.classList.remove("hidden");
      }
    }

    // Handle logout
    logoutBtn?.addEventListener("click", async () => {
      const token = localStorage.getItem("access_token");

      if (token) {
        try {
          await fetch("/api/auth/logout", {
            method: "POST",
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
          });
        } catch {
          // console.warn("Logout request failed:", error);
        }
      }

      // Clear tokens regardless of API response
      localStorage.removeItem("access_token");
      localStorage.removeItem("refresh_token");

      // Redirect to home page
      window.location.href = "/";
    });
  });
</script>
