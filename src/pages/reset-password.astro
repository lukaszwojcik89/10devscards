---
import Layout from "../layouts/Layout.astro";
import { Button } from "../components/ui/button";
---

<Layout title="Resetowanie hasła | AI Flashcards">
  <main class="container mx-auto max-w-md p-6 mt-8">
    <div class="bg-card rounded-lg shadow-lg p-8">
      <h1 class="text-3xl font-bold mb-6 text-center">Resetowanie hasła</h1>

      <p class="text-gray-600 text-sm mb-6 text-center">
        Podaj swój adres email, a wyślemy Ci link do resetowania hasła.
      </p>

      <form id="reset-form" class="space-y-4">
        <div>
          <label for="email" class="block text-sm font-medium mb-1">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="email@example.com"
            required
          />
        </div>

        <div id="error-message" class="text-red-500 text-sm hidden"></div>
        <div id="success-message" class="text-green-600 text-sm hidden"></div>

        <Button type="submit" className="w-full"> Wyślij link resetowania </Button>

        <div class="text-center text-sm mt-4">
          <a href="/login" class="text-primary hover:underline">Powrót do logowania</a>
        </div>
      </form>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const resetForm = document.getElementById("reset-form");
    const errorMessage = document.getElementById("error-message");
    const successMessage = document.getElementById("success-message");

    resetForm?.addEventListener("submit", async (e) => {
      e.preventDefault();

      // Hide previous messages
      if (errorMessage && successMessage) {
        errorMessage.classList.add("hidden");
        successMessage.classList.add("hidden");
      }

      // Get form data
      const formData = new FormData(e.target as HTMLFormElement);
      const email = formData.get("email") as string;

      try {
        const response = await fetch("/api/auth/password/reset", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email }),
        });

        const result = await response.json();

        if (response.ok) {
          // Show success message
          if (successMessage) {
            successMessage.textContent = result.message;
            successMessage.classList.remove("hidden");
          }

          // Clear form
          (e.target as HTMLFormElement).reset();
        } else {
          // Show error message
          if (errorMessage) {
            errorMessage.textContent = result.error?.message || "Wystąpił błąd podczas wysyłania linku resetowania";
            errorMessage.classList.remove("hidden");
          }
        }
      } catch (error) {
        console.error("Password reset error:", error);
        if (errorMessage) {
          errorMessage.textContent = "Wystąpił błąd połączenia. Spróbuj ponownie.";
          errorMessage.classList.remove("hidden");
        }
      }
    });
  });
</script>
