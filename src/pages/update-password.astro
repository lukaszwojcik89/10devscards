---
import Layout from "../layouts/Layout.astro";
import { Button } from "../components/ui/button";
---

<Layout title="Nowe hasło | AI Flashcards">
  <main class="container mx-auto max-w-md p-6 mt-8">
    <div class="bg-card rounded-lg shadow-lg p-8">
      <h1 class="text-3xl font-bold mb-6 text-center">Ustaw nowe hasło</h1>

      <p class="text-gray-600 text-sm mb-6 text-center">Wprowadź nowe hasło dla swojego konta.</p>

      <form id="update-password-form" class="space-y-4">
        <div>
          <label for="password" class="block text-sm font-medium mb-1">Nowe hasło</label>
          <input
            type="password"
            id="password"
            name="password"
            class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
            minlength="8"
            required
          />
          <p class="text-xs text-gray-500 mt-1">Minimum 8 znaków</p>
        </div>

        <div>
          <label for="confirm-password" class="block text-sm font-medium mb-1">Potwierdź hasło</label>
          <input
            type="password"
            id="confirm-password"
            name="confirm-password"
            class="w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
            minlength="8"
            required
          />
        </div>

        <div id="error-message" class="text-red-500 text-sm hidden"></div>
        <div id="success-message" class="text-green-600 text-sm hidden"></div>

        <Button type="submit" className="w-full"> Zaktualizuj hasło </Button>

        <div class="text-center text-sm mt-4">
          <a href="/login" class="text-primary hover:underline">Powrót do logowania</a>
        </div>
      </form>
    </div>
  </main>
</Layout>

<script lang="ts">
  document.addEventListener("DOMContentLoaded", () => {
    const updateForm = document.getElementById("update-password-form");
    const errorMessage = document.getElementById("error-message");
    const successMessage = document.getElementById("success-message");

    // Get token from URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get("token");

    if (!token) {
      if (errorMessage) {
        errorMessage.textContent = "Nieprawidłowy lub brakujący token resetowania hasła.";
        errorMessage.classList.remove("hidden");
      }
      return;
    }

    updateForm?.addEventListener("submit", async (e) => {
      e.preventDefault();

      // Hide previous messages
      if (errorMessage && successMessage) {
        errorMessage.classList.add("hidden");
        successMessage.classList.add("hidden");
      }

      // Get form data
      const formData = new FormData(e.target as HTMLFormElement);
      const password = formData.get("password") as string;
      const confirmPassword = formData.get("confirm-password") as string;

      // Validate passwords match
      if (password !== confirmPassword) {
        if (errorMessage) {
          errorMessage.textContent = "Hasła nie są identyczne.";
          errorMessage.classList.remove("hidden");
        }
        return;
      }

      try {
        const response = await fetch("/api/auth/password/update", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            token: token,
            password: password,
          }),
        });

        const result = await response.json();

        if (response.ok) {
          // Show success message
          if (successMessage) {
            successMessage.textContent = result.message + " Przekierowanie do logowania...";
            successMessage.classList.remove("hidden");
          }

          // Redirect to login after 2 seconds
          setTimeout(() => {
            window.location.href = "/login";
          }, 2000);
        } else {
          // Show error message
          if (errorMessage) {
            errorMessage.textContent = result.error?.message || "Wystąpił błąd podczas aktualizacji hasła";
            errorMessage.classList.remove("hidden");
          }
        }
      } catch (error) {
        console.error("Password update error:", error);
        if (errorMessage) {
          errorMessage.textContent = "Wystąpił błąd połączenia. Spróbuj ponownie.";
          errorMessage.classList.remove("hidden");
        }
      }
    });
  });
</script>
