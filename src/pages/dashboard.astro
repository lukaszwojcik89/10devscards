---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Dashboard | 10DevCards">
  <main class="container mx-auto px-4 py-8 min-h-screen">
    <!-- Loading state -->
    <div id="loading" class="text-center py-8">
      <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto mb-4"></div>
      <p class="text-gray-600">Ładowanie dashboard...</p>
    </div>

    <!-- Error state -->
    <div id="error" class="hidden text-center py-8">
      <p class="text-red-600 mb-4">Nie udało się załadować dashboard</p>
      <a href="/login" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700">
        Zaloguj się ponownie
      </a>
    </div>

    <!-- Dashboard content -->
    <div id="dashboard" class="hidden">
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Dashboard Użytkownika</h1>
        <p class="text-gray-600">Przegląd postępów Twojej nauki</p>
      </div>

      <!-- Stats Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- User Stats -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-sm font-medium text-gray-500 mb-2">Talie</h3>
          <p id="total-decks" class="text-2xl font-bold text-gray-900">-</p>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-sm font-medium text-gray-500 mb-2">Fiszki</h3>
          <p id="total-flashcards" class="text-2xl font-bold text-gray-900">-</p>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-sm font-medium text-gray-500 mb-2">Do przeglądu</h3>
          <p id="due-now" class="text-2xl font-bold text-indigo-600">-</p>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-sm font-medium text-gray-500 mb-2">Seria</h3>
          <p id="streak-days" class="text-2xl font-bold text-green-600">-</p>
        </div>
      </div>

      <!-- Study Progress -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Postęp nauki</h3>
          <div class="space-y-3">
            <div class="flex justify-between items-center">
              <span class="text-sm text-gray-600">Dzisiaj przejrzane:</span>
              <span id="today-reviews" class="font-medium">-</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-sm text-gray-600">Dzienny limit:</span>
              <span id="daily-limit" class="font-medium">-</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-sm text-gray-600">Nadrobienie dostępne:</span>
              <span id="catchup-available" class="font-medium">-</span>
            </div>
          </div>
        </div>

        <!-- AI Usage -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Użycie AI</h3>
          <div class="space-y-3">
            <div class="flex justify-between items-center">
              <span class="text-sm text-gray-600">Miesięczne użycie:</span>
              <span id="monthly-usage" class="font-medium">-</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-sm text-gray-600">Limit miesięczny:</span>
              <span id="monthly-limit" class="font-medium">-</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="usage-bar" class="bg-indigo-600 h-2 rounded-full" style="width: 0%"></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Quick Actions -->
      <div class="bg-white rounded-lg shadow p-6">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Szybkie akcje</h3>
        <div class="flex flex-wrap gap-3">
          <button id="start-session-btn" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 disabled:bg-gray-300 disabled:cursor-not-allowed">
            Rozpocznij sesję nauki
          </button>
          <button id="generate-ai-btn" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed">
            Generuj fiszki AI
          </button>
          <a href="/decks" class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">
            Zarządzaj taliami
          </a>
        </div>
      </div>

      <!-- Recent Decks -->
      <div id="recent-decks-section" class="mt-8 hidden">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Ostatnie talie</h3>
        <div id="recent-decks" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <!-- Dynamic content -->
        </div>
      </div>
    </div>
  </main>
</Layout>

<script type="module">
  document.addEventListener("DOMContentLoaded", async () => {
    const loading = document.getElementById("loading");
    const error = document.getElementById("error");
    const dashboard = document.getElementById("dashboard");

    // Check if user is logged in
    const token = localStorage.getItem("access_token");
    if (!token) {
      window.location.href = "/login";
      return;
    }

    try {
      // Fetch dashboard data
      const response = await fetch("/api/dashboard", {
        method: "GET",
        headers: {
          "Authorization": `Bearer ${token}`,
          "Content-Type": "application/json",
        },
      });

      if (!response.ok) {
        if (response.status === 401) {
          // Only logout on specific auth errors
          const errorData = await response.json().catch(() => ({}));
          if (errorData.error?.code === "INVALID_TOKEN" || errorData.error?.code === "TOKEN_EXPIRED") {
            localStorage.removeItem("access_token");
            localStorage.removeItem("refresh_token");
            window.location.href = "/login";
            return;
          }
          // For other 401s, just show error without logout
          throw new Error("Błąd autoryzacji");
        }
        throw new Error(`HTTP ${response.status}`);
      }

      const data = await response.json();
      const dashboardData = data.data;

      // Hide loading, show dashboard
      loading?.classList.add("hidden");
      dashboard?.classList.remove("hidden");

      // Populate user stats
      document.getElementById("total-decks").textContent = dashboardData.user_stats.total_decks;
      document.getElementById("total-flashcards").textContent = dashboardData.user_stats.total_flashcards;
      document.getElementById("due-now").textContent = dashboardData.upcoming_sessions.due_now;
      document.getElementById("streak-days").textContent = dashboardData.study_progress.streak_days;

      // Populate study progress
      document.getElementById("today-reviews").textContent = dashboardData.study_progress.today_reviews;
      document.getElementById("daily-limit").textContent = dashboardData.study_progress.daily_limit;
      document.getElementById("catchup-available").textContent = 
        dashboardData.study_progress.catchup_available ? "Tak" : "Nie";

      // Populate AI usage
      document.getElementById("monthly-usage").textContent = 
        `$${dashboardData.ai_usage.monthly_usage_usd.toFixed(2)}`;
      document.getElementById("monthly-limit").textContent = 
        `$${dashboardData.ai_usage.monthly_limit_usd.toFixed(2)}`;
      
      const usageBar = document.getElementById("usage-bar");
      if (usageBar) {
        usageBar.style.width = `${Math.min(dashboardData.ai_usage.usage_percentage, 100)}%`;
      }

      // Setup quick actions
      const startSessionBtn = document.getElementById("start-session-btn");
      const generateAiBtn = document.getElementById("generate-ai-btn");
      
      if (startSessionBtn) {
        startSessionBtn.disabled = !dashboardData.quick_actions.can_start_session;
        startSessionBtn.addEventListener('click', () => {
          if (dashboardData.quick_actions.can_start_session) {
            // Find a deck with due cards to start session
            const deckWithDueCards = dashboardData.recent_decks.find(deck => deck.due_count > 0);
            if (deckWithDueCards) {
              window.location.href = `/decks/${deckWithDueCards.slug}?study=true`;
            } else {
              // Fallback to decks page to let user choose
              window.location.href = "/decks";
            }
          }
        });
      }
      
      if (generateAiBtn) {
        generateAiBtn.disabled = !dashboardData.quick_actions.can_generate_ai;
        generateAiBtn.addEventListener('click', () => {
          if (dashboardData.quick_actions.can_generate_ai) {
            window.location.href = "/generate-ai";
          }
        });
      }

      // Show recent decks if any
      if (dashboardData.recent_decks.length > 0) {
        const recentDecksSection = document.getElementById("recent-decks-section");
        const recentDecksContainer = document.getElementById("recent-decks");
        
        recentDecksSection?.classList.remove("hidden");
        
        if (recentDecksContainer) {
          recentDecksContainer.innerHTML = dashboardData.recent_decks.map(deck => `
            <div class="bg-white rounded-lg shadow p-4">
              <h4 class="font-medium text-gray-800 mb-2">${deck.name}</h4>
              <div class="text-sm text-gray-600 space-y-1">
                <p>Fiszki: ${deck.flashcard_count}</p>
                <p>Do przeglądu: ${deck.due_count}</p>
                <p>Oczekujące: ${deck.pending_count}</p>
              </div>
              <a href="/decks/${deck.slug}" class="mt-3 inline-block px-3 py-1 bg-indigo-100 text-indigo-700 rounded text-sm hover:bg-indigo-200">
                Otwórz
              </a>
            </div>
          `).join('');
        }
      }

    } catch {
      loading?.classList.add("hidden");
      error?.classList.remove("hidden");
    }
  });
</script>