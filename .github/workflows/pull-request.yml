name: Pull Request Validation

on:
  pull_request:
    branches: [ master, main ]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format -- --check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:run

      - name: Generate coverage report
        run: npm run test:run -- --coverage

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, build-test]
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const needs = ${{ toJson(needs) }};
            const results = Object.entries(needs);
            
            let status = '✅ Wszystkie sprawdzenia przeszły pomyślnie!';
            let details = '';
            
            for (const [jobName, result] of results) {
              const icon = result.result === 'success' ? '✅' : '❌';
              details += `${icon} **${jobName}**: ${result.result}\n`;
            }
            
            if (results.some(([, result]) => result.result !== 'success')) {
              status = '❌ Niektóre sprawdzenia nie powiodły się';
            }
            
            const body = `## 🔍 Status Pull Request
            
            ${status}
            
            ### Szczegóły:
            ${details}
            
            ### Pokrycie testami
            Raport pokrycia testami został wygenerowany i jest dostępny w artifaktach.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
